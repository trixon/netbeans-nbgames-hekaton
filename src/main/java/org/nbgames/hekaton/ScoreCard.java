/*
 * Copyright 2016 Patrik Karlsson.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.nbgames.hekaton;

import java.awt.Dimension;
import org.nbgames.core.api.DictNbg;
import org.nbgames.core.api.NbGames;
import se.trixon.almond.nbp.Almond;
import se.trixon.almond.util.icons.IconColor;
import se.trixon.almond.util.icons.material.MaterialIcon;

/**
 *
 * @author Patrik Karlsson
 */
public class ScoreCard extends javax.swing.JPanel {

    private final ScoreCardObservable mObservable = new ScoreCardObservable();
    private final Options mOptions = Options.getInstance();
    private PlayerPanel[] mPlayerPanels;
    private final IconColor mIconColor = NbGames.getAlmondOptions().getIconColor();

    /**
     * Creates new form ScoreCard
     */
    public ScoreCard() {
        initComponents();
        holdButton.setIcon(MaterialIcon._Av.STOP.get(Almond.ICON_LARGE * 2, mIconColor));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        holderPanel = new javax.swing.JPanel();
        holdButton = new javax.swing.JButton();

        setLayout(new java.awt.GridBagLayout());

        holderPanel.setLayout(new java.awt.GridLayout());
        add(holderPanel, new java.awt.GridBagConstraints());

        holdButton.setToolTipText(DictNbg.HOLD.toString());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(24, 0, 0, 0);
        add(holdButton, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents
    public ScoreCardObservable getObservable() {
        return mObservable;
    }

    void newGame() {
        holderPanel.removeAll();
        int numOfPlayers = mOptions.getNumOfPlayers();
        mPlayerPanels = new PlayerPanel[numOfPlayers];
        Dimension d = new Dimension(128, 196);
        for (int i = 0; i < numOfPlayers; i++) {
            mPlayerPanels[i] = new PlayerPanel();
            mPlayerPanels[i].setPreferredSize(d);
            holderPanel.add(mPlayerPanels[i]);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton holdButton;
    private javax.swing.JPanel holderPanel;
    // End of variables declaration//GEN-END:variables
}
